# SPDX-FileCopyrightText: 2025 Deutsche Telekom AG
#
# SPDX-License-Identifier: Apache-2.0

x-kong-image: &kong-image
  build:
    context: .
    dockerfile: Dockerfile
  environment:
    KONG_DATABASE: postgres
    KONG_PG_HOST: postgres
    KONG_PG_PORT: 5432
    KONG_PG_DATABASE: kong
    KONG_PG_SCHEMA: public
    KONG_PG_USER: kong
    KONG_PG_PASSWORD: kong
    KONG_LOG_LEVEL: debug
    KONG_PROXY_ACCESS_LOG: /dev/stdout
    KONG_ADMIN_ACCESS_LOG: /dev/stdout
    KONG_PROXY_ERROR_LOG: /dev/stderr
    KONG_ADMIN_ERROR_LOG: /dev/stderr
    KONG_ADMIN_LISTEN: 0.0.0.0:8001
    KONG_TRACING_INSTRUMENTATIONS: all
    KONG_TRACING_SAMPLING_RATE: 1.0

services:
  kong_init:
    <<: *kong-image
    depends_on:
      - postgres
    entrypoint: [ "/bin/sh", "-c", "until kong migrations bootstrap; do echo waiting for database; sleep 2; done;" ]
  kong:
    <<: *kong-image
    depends_on:
      kong_init:
        condition: service_completed_successfully
      httpbin:
        condition: service_started
    entrypoint: ["/bin/sh", "-c", "KONG_NGINX_DAEMON='off' kong start"]
    ports:
      - "8000:8000"
      - "8001:8001"
  postgres:
    image: postgres:16
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
  httpbin:
    image: mccutchen/go-httpbin
    ports:
      - "8080"  # Internal port only, no host exposure
  jaeger:
    image: jaegertracing/all-in-one:1.53
    ports:
      - "16686:16686"
      - "14268:14268"
      - "9411:9411"
    environment:
      COLLECTOR_OTLP_ENABLED: true
      COLLECTOR_ZIPKIN_HOST_PORT: :9411

  iris:
    build:
      context: ./tests/
      dockerfile: Dockerfile.iris
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: dev-file
      KC_HTTP_RELATIVE_PATH: /auth
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      # HTTPS certificate configuration
      KC_HTTPS_CERTIFICATE_FILE: /opt/keycloak/certs/tls.crt
      KC_HTTPS_CERTIFICATE_KEY_FILE: /opt/keycloak/certs/tls.key
    ports:
      - "8080:8080"
      - "8443:8443"
    command: [
      "start-dev", 
      "--http-enabled=true", 
      "--hostname-strict=false", 
      "--hostname=iris",
      "--https-certificate-file=/opt/keycloak/certs/tls.crt",
      "--https-certificate-key-file=/opt/keycloak/certs/tls.key"
    ]

  tests:
    image: badouralix/curl-jq
    depends_on:
      - kong
      - jaeger
      - iris
      - httpbin
    volumes:
      - ./tests:/opt/tests
    entrypoint: [ "/bin/sh", "-c", "cd /opt/tests && chmod +x *.sh && ./run_tests.sh" ]
    profiles:
      - testing

